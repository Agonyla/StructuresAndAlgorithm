package algorithm_journey.class048;

/**
 * @author: Agony
 * @create: 2024/7/20 15:39
 * @describe:
 * @link:
 */
public class Code03_DiffMatrixLuogu {

    // todo

    // 二维差分模版(洛谷)
    // 要求 左上角点(a,b)；右下角点(c,d) 这篇区域整体+V


    // 思路
    // 左上角点(a,b)；右下角点(c,d)
    // 1. set 做如下操作
    //
    //   ----------------
    //   |+V            | -V
    //   |              |
    //   |              |
    //   |              |
    //   |              |
    //   ----------------
    //    -V             +V
    //
    //  在(a,b) +V；(a,d+1) -V；(c+1,b) -V；(c+1,d+1) +V
    //
    //  (a,b)位置+V，会对右下角的整片区域产生影响
    //  (a,d+1)位置 -V，抵消对右边的影响
    //  (c+1,b)位置 -V，抵消对下边的影响
    //  (c+1,d+1)位置 +V，两次 -V，影响了两次，再加一次
    //
    // 2. build 加工
    // 按二维数组前缀和加工处理一次：
    // sum 从左往右，从上往下开始加工
    // sum[i][j] = 左边 + 上边 - 左上 + 自己
    // -> sum[i][j] += sum[i][j - 1] + sum[i - 1][j] - sum[i - 1][j - 1]

    // 注意：真实数据用一圈0包裹起来，可以减少很多边界讨论

}
